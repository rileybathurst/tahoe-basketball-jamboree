---
// this is different but its easier to read
// it might need some of the strapi steps or atleast an async await
const url = new URL(`${import.meta.env.STRAPI_URL}api/tournaments`);

const populate = "?populate";
const ampersand = "&populate";
const games = "[games][populate][home_team]=true";
const away_team = "[games][populate][away_team]=true";
const home_team = "[games][populate][home_team]=true";
const round = "[games][populate][round]=true";

const data = await fetch(
  `${url}?
    ${populate}${games}
    ${ampersand}${home_team}
    ${ampersand}${away_team}
    ${ampersand}${round}
    `
).then((response) => response.json());

interface tournamentTypes {
  attributes: {
    year: number;
    cancellation: string;
    winner: string;
    games: {
      data: {
        attributes: {
          home_team_score: number;
          away_team_score: number;
          home_team: {
            data: {
              attributes: {
                name: string;
              };
            };
          };
          away_team: {
            data: {
              attributes: {
                name: string;
              };
            };
          };
          round: {
            data: {
              attributes: {
                name: string;
              };
            };
          };
        };
      }[];
    };
  };
}
data.data.map((tournament: tournamentTypes) => {
  tournament.attributes.games.data
    .filter(
      (game) =>
        game.attributes?.round?.data?.attributes?.name === "championship"
    )
    .map((game) => {
      if (game.attributes.home_team_score > game.attributes.away_team_score) {
        tournament.attributes.winner = game.attributes.home_team.data.attributes.name;
      } else {
        tournament.attributes.winner = game.attributes.away_team.data.attributes.name;
      }
    });
});

---

<ul class="tournaments">
  {data.data.map((tournament: tournamentTypes) => (
    <li class={tournament.attributes.cancellation ? "cancelled" : null} >
      {tournament.attributes.cancellation ? (
        <strike>{tournament.attributes.year}</strike><span> - {tournament.attributes.cancellation}</span>
      ) : (
        <a href={`/tournaments/${tournament.attributes.year}`}>
          {tournament.attributes.year}
          
          {tournament.attributes.winner ? (`- Winner ${tournament.attributes.winner}`) : null}
        </a>
      )}
    </li>
  ))}
</ul>
