---
import qs from "qs";
// TODO: I can maybe use the lib/strapi.ts or build this into a new one

export async function getStaticPaths() {
  const url = new URL(`${import.meta.env.STRAPI_URL}api/tournaments`);

  const query = qs.stringify({
    populate: {
      games: {
        populate: {
          fields: ["home_team"],
          home_team: {
            populate: {
              fields: ["name"],
            },
          },
          away_team: {
            populate: {
              fields: ["name"],
            },
          },
        },
      },
      year: {
        populate: true,
      },
    },
  });

  const data = await fetch(`${url}?${query}`).then((response) =>
    response.json()
  );

  interface yearTypes {
    attributes: {
      year: string;
    };
  }
  return data.data.map((year: yearTypes) => {
    return {
      params: { year: year.attributes.year },
      props: { year },
    };
  });
}

interface yearPageTypes {
  attributes: {
    year: string;
    games: {
      data: Array<{
        attributes: {
          home_team: {
            data: {
              attributes: {
                name: string;
              };
            };
          };
          away_team: {
            data: {
              attributes: {
                name: string;
              };
            };
          };
          home_team_score: number;
          away_team_score: number;
        };
      }>;
    };
  };
}
const { year } = Astro.props as { year: yearPageTypes };
---

<h1>{year.attributes.year}</h1>

<ul>
  {
    year.attributes.games.data.map((game) => (
      <li>
        <p>
          {game.attributes.home_team.data.attributes.name} vs&nbsp;
          {game.attributes.away_team.data.attributes.name}
        </p>
        <p>
          {game.attributes.home_team_score} - {game.attributes.away_team_score}
        </p>
      </li>
    ))
  }
</ul>

<a href="/">home</a>
