---
import fetchApi from "../lib/strapi";
import Layout from "../components/layout.astro";
import { string } from "astro/zod";

type lodgingsTypes = {
  attributes: {
    name: string;
    link: string;
    phone: number;
    details: string;
  };
}[];
const lodgings = await fetchApi<lodgingsTypes>({
  endpoint: "lodgings",
  wrappedByKey: "data",
  populate: {
    name: true,
    link: true,
    phone: true,
    details: true,
  },
});

const phoneFormat = (phone: number) => {
  const phoneString = phone.toString();
  const match = phoneString.match(/^(\d{3})(\d{3})(\d{4})$/);
  if (match) {
    return `(${match[1]}) ${match[2]}-${match[3]}`;
  }
  return null;
};
---

<Layout>
  <main>
    <ul class="lodging">
      {
        lodgings.map((lodge) => (
          <li class="lodge">
            <h2>
              {lodge.attributes.link ? (
                <a href={lodge.attributes.link}>{lodge.attributes.name}</a>
              ) : (
                lodge.attributes.name
              )}
            </h2>
            {lodge.attributes.phone ? (
              <p>
                <a href={lodge.attributes.phone.toString()}>
                  {phoneFormat(lodge.attributes.phone)}
                </a>
              </p>
            ) : null}
            <p>{lodge.attributes.details}</p>
          </li>
        ))
      }
    </ul>
  </main>
</Layout>
